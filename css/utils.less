/* Utils */
.nopadding {
    padding: 0px!important;
}

.nomargin {
    margin: 0px!important;
}

.display-block {
    display: inline-block;
}

.mbottom20 {
    margin-bottom: 20px;
}

.padding-right-5 {
    padding-right: 5px;
}

.padding-left-5 {
    padding-left: 5px;
}

.padding-rl-5 {
    padding: 0px 5px;
}

.nopadding-left {
    padding-left: 0px;
}

.nopadding-right {
    padding-right: 0px;
}

.overflow-hidden {
    overflow: hidden;
}

.display-none {
    display: none;
}

.position-relative {
    position: relative;
}

.margin-0auto {
    margin: 0 auto;
}

.icon-container {
    display: inline-block;

    .icon {
        line-height: 0em;
        &.rounded.big{
            .RoundedIcon(20px);
        }
    }
}

.background-white {
    background-color: #fff;
}

//Removing bootstrap padding
.row.nopadding > [class*='col-'] {
    padding-left: 0px;
    padding-right: 0px;
}

//Custom columns 
@media @lg-desktop {
    .col-custom-20p100{
        width: 20%;
        display: inline-block;
        float: left;
    }
}

.bottom-shadow {
    .BoxShadow('0px 5px 20px -4px rgba(0,0,0,0.75)');
}

.color-primary {
    color: @ColorPrimary;
}

.divisor{
    height: 1px;
    background-color: #70b654;
    width: 50px;
    display: block;
    margin-bottom: 26px;
}

/* Alinea los items verticalmente
/* alignItems: baseline, center, flex-end, flex-start
/* flexDirection: column, column-reverse, row, row-reverse
/*
*/
.VerticalAlign(@alignItems, @flexDirection){
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;

    -ms-flex-align: center;
    -webkit-align-items: center;
    align-items: @alignItems;

    -webkit-justify-content: space-around;
    justify-content: space-around;

    flex-direction: @flexDirection;
}

.vertical-align {
    .VerticalAlign('center','column');
}

.Transition(@type){
    -webkit-transition: ~"@{type}";
    -moz-transition: ~"@{type}";
    -ms-transition: ~"@{type}";
    -o-transition: ~"@{type}";
}

.RoundedIcon(@radio){
    .VerticalAlign(center, column);
    .BorderRadius(@radio);
    display: inline-block;
    width: @radio*2;
    height: @radio*2 !important;
    text-align: center;
    
    i{
        color: #fff;
    }
}

.AbsoluteCenter(){
    position: absolute;
    margin: auto;
    left: 0px;
    right: 0px;
    top: 0px;
    bottom: 0px;
}

.BoxShadow(@shadow){
    -webkit-box-shadow: ~"@{shadow}";
    -moz-box-shadow: ~"@{shadow}";
    box-shadow: ~"@{shadow}";
}

.RemoveOutline(){
    &:hover,
    &:focus,
    &:active{
        outline: none;
    }
}

.Transform(@function) {
    -webkit-transform: @function;
    -moz-transform: @function;
    -ms-transform: @function;
    -o-transform: @function;
}

.TrianguleBottom(){
    &:before {
        position: absolute;
        left: 50%;
        content: '';
        border: 20px solid transparent;
        .Transform(translate(-50%, 0));
        .Transition(all .4s linear);
    }

    &:after {
        width: 0;
        top: 0;
        bottom: 20px;
        right: 0;
        position: absolute;
        content: '';
        display: block;
    }
}

.TrianguleRight(){
    &:before {
        .Transform(translate(-50%, 0));
        .Transition(all .4s linear);
        position: absolute;
        content: '';
        border: 20px solid transparent;
    }

    &:after {
        width: 0;
        top: 0;
        position: absolute;
        content: '';
        display: block;
    }
}

.TrianguleTop(){
    &:before {
        .Transform(translate(-50%, 0));
        .Transition(all .4s linear);
        position: absolute;
        content: '';
        border: 20px solid transparent;
        top:0px;
    }

    &:after {
        width: 0;
        top: 0;
        position: absolute;
        content: '';
        display: block;
    }
}

.TrianguleTopUp(){
    .TrianguleTop();

    &:before {
        border-bottom-color: @ColorPrimary;
        top: -40px;
    }
}

.TrianguleBottomDown(){
    .TrianguleBottom();

    &:before {
        border-top-color: @ColorPrimary;
        bottom: -40px;
    }
}

.TrianguleBottomUp(){
    .TrianguleBottom();

    &:before {
        border-bottom-color: @ColorPrimary;
        bottom: 0px;
    }
}

.TrianguleRightRight(){
    .TrianguleRight();

    &:before {
        border-left-color: @ColorPrimary;
        right: -60px;
        top: 50%;
    }
}

.Zoom(@scale){
    .Transition(0.2s all ease);

    &:hover{
        transform:scale(@scale);
        -ms-transform:scale(@scale);
        -moz-transform:scale(@scale);
        -webkit-transform:scale(@scale);
        -o-transform:scale(@scale);
    }
}

.ZoomOnly(@scale){
    .Transition(0.4s all ease);
    -ms-transform:scale(@scale);
    -moz-transform:scale(@scale);
    -webkit-transform:scale(@scale);
    -o-transform:scale(@scale);
    transform:scale(@scale);
}

.CustomFAList(@content, @padding, @margin, @color, @lineHeight){
    list-style-type: none;
    padding-left: 0px;
    display: table;

    li {
        padding-left: ~"@{padding}";
        display: table-row;
    }

    li:before {
        content: @content;
        display: table-cell;
        font-family: 'FontAwesome';
        margin-right: ~"@{margin}";
        width: ~"@{padding}";
        color: @color;
        line-height: ~"@{lineHeight}";
    }
}

.RoundedIcon(@radio){
    .VerticalAlign(center, row);
    .BorderRadius(@radio);
    display: inline-block;
    width: @radio*2;
    height: @radio*2 !important;
    text-align: center;
    
    i{
        color: #fff;
    }
}

.SquaredIcon(@height){
    .VerticalAlign(center, row);
    .BorderRadius(0px);
    display: inline-block;
    width: @height;
    height: @height !important;
    text-align: center;
    
    i {
        margin-right: 0px;
        color: #fff;
    }
}

.Btn(@colorBack, @colorHover, @colorLetter){
    .RemoveOutline();
    .Transition(0.2s all ease);
    .BorderRadius(0px);
    line-height: 42px;
    background-color: @colorBack;
    border:2px solid @colorBack;
    color: @colorLetter;
    text-transform: uppercase;
    font-size: 14px;
    font-weight: bold;
    white-space: normal;
    padding: 0px 30px;
    
    &:hover{
        background-color: ;
        border-color: @colorHover;
        color: #fff;
    }
}

.Calc(@prop; @val){
    @{prop}: calc(~'@{val}');
    @{prop}: -moz-calc(~'@{val}');
    @{prop}: -webkit-calc(~'@{val}');
    @{prop}: -o-calc(~'@{val}');
}

.CalcOnly(@val){
    calc : ~"@{val}";
    -moz-calc : ~"@{val}";
    -webkit-calc : ~"@{val}";
    -o-calc : ~"@{val}";
}

.BorderRadius(@radius: 5px){
    -webkit-border-radius: @radius;
    -moz-border-radius:    @radius;
    border-radius:         @radius;

    -moz-background-clip:    padding;
    -webkit-background-clip: padding-box;
    background-clip:         padding-box;
}

.Opacity(@opacity: 0.5){
    -webkit-opacity:    @opacity;
    -moz-opacity:       @opacity;
    opacity:            @opacity;
}

.GradientVertical(@startColor: #eee, @endColor: #fff) {
    background-color: @startColor;
    background-image: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
    background-image: -webkit-linear-gradient(top, @startColor, @endColor);
    background-image: -moz-linear-gradient(top, @startColor, @endColor);
    background-image: -ms-linear-gradient(top, @startColor, @endColor);
    background-image: -o-linear-gradient(top, @startColor, @endColor);
}

.GradientHorizontal(@startColor: #eee, @endColor: #fff) {
    background-color: @startColor;
    background-image: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));
    background-image: -webkit-linear-gradient(left, @startColor, @endColor);
    background-image: -moz-linear-gradient(left, @startColor, @endColor);
    background-image: -ms-linear-gradient(left, @startColor, @endColor);
    background-image: -o-linear-gradient(left, @startColor, @endColor);
}

.GrayScale(@porcentaje: 100%){
    -webkit-filter: grayscale(@porcentaje);
    -moz-filter: grayscale(@porcentaje);
    -o-filter: grayscale(@porcentaje);
    -ms-filter: grayscale(@porcentaje);
    filter: grayscale(@porcentaje);
}
